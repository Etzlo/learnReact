{"version":3,"file":"static/js/488.36458e55.chunk.js","mappings":"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","sources":["webpack://my-project/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-project/./src/components/Profile/MyPosts/Posts/Post.module.css?5aca","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.module.css","webpack://my-project/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://my-project/./src/components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css?c3a9","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","webpack://my-project/./src/components/hoc/FormsControls/createFormsControls.module.css?7b4f","components/hoc/FormsControls/createFormsControls.js","utils/validators/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MyPosts\":\"MyPosts_MyPosts__8CHeK\",\"addPost\":\"MyPosts_addPost__vrj7C\"};","// extracted by mini-css-extract-plugin\nexport default {\"Post\":\"Post_Post__SCj4T\"};","import React from 'react'\nimport classes from './Post.module.css'\n\nconst Post = props => {\n\treturn (\n\t\t<div className={classes.Post}>\n\t\t\t<p>{props.message}</p>\n\t\t\t<img\n\t\t\t\tsrc='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTnGWEwXpRS7z7rVaGrjIWWTdE8_TiYTGiYjA&s'\n\t\t\t\talt='IMG'\n\t\t\t/>\n\t\t\t<p>Like {props.likesCount}</p>\n\t\t\t<button onClick={() => props.deletePost(props.id)}>Delete this post</button>\n\t\t</div>\n\t)\n}\n\nexport default Post\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { maxLength10, required } from '../../../utils/validators/validators'\nimport { Textarea } from '../../hoc/FormsControls/createFormsControls'\nimport classes from './MyPosts.module.css'\nimport Post from './Posts/Post'\n\nconst MyPosts = props => {\n\tconst deletePost = postId => {\n\t\tprops.deletePost(postId)\n\t}\n\t\n\tlet getPosts = props.posts.map(p => (\n\t\t<Post\n\t\t\tdeletePost={deletePost}\n\t\t\tkey={p.id}\n\t\t\tid={p.id}\n\t\t\tmessage={p.message}\n\t\t\tlikesCount={p.likesCount}\n\t\t/>\n\t))\n\n\tconst onAddPost = values => {\n\t\tif (values.newPostText) {\n\t\t\tprops.addPost(values.newPostText)\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className={classes.addPost}>\n\t\t\t\t<AddNewPostFormRedux onSubmit={onAddPost} />\n\t\t\t</div>\n\t\t\t<div className={classes.MyPosts}>{getPosts}</div>\n\t\t</>\n\t)\n}\n\nconst AddNewPostForm = props => {\n\treturn (\n\t\t<form onSubmit={props.handleSubmit}>\n\t\t\t<Field\n\t\t\t\tplaceholder='Post message'\n\t\t\t\tcomponent={Textarea}\n\t\t\t\tname='newPostText'\n\t\t\t\tvalidate={[required, maxLength10]}\n\t\t\t/>\n\t\t\t<button>Add Post</button>\n\t\t</form>\n\t)\n}\n\nconst AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(\n\tAddNewPostForm\n)\n\nexport default React.memo(MyPosts)\n","import { connect } from 'react-redux'\nimport { addPostAC, deletePostAC } from '../../../redux/profile-reducer'\nimport MyPosts from './MyPosts'\n\nlet mapStateToProps = state => {\n\treturn {\n\t\tposts: state.profilePage.posts,\n\t\tnewPostText: state.profilePage.newPostText\n\t}\n}\n\nlet mapDispatchToProps = dispatch => {\n\treturn {\n\t\taddPost: newPostText => {\n\t\t\tdispatch(addPostAC(newPostText))\n\t\t},\n\t\tdeletePost: postId => {\n\t\t\tdispatch(deletePostAC(postId))\n\t\t}\n\t}\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"Profile\":\"ProfileInfo_Profile__ySV0h\",\"ProfileInfo\":\"ProfileInfo_ProfileInfo__Z8dFK\"};","// extracted by mini-css-extract-plugin\nexport default {\"ProfileStatus\":\"ProfileStatus_ProfileStatus__9f4bE\"};","import React, { useEffect, useState } from 'react'\nimport classes from './ProfileStatus.module.css'\n\nconst ProfileStatusWithHooks = props => {\n\tconst [editMode, setEditMode] = useState(false)\n\tconst [status, setStatus] = useState(props.status)\n\n\tuseEffect( () => {\n\t\tsetStatus(props.status)\n\t}, [props.status])\n\n\n\tconst activateEditMode = () => {\n\t\tsetEditMode(true)\n\t}\n\t\n\tconst deactivateEditMode = () => {\n\t\tsetEditMode(false)\n\t\tprops.updateStatus(status)\n\t}\n\n\tconst onStatusChange = (e) => {\n\t\tsetStatus(e.currentTarget.value)\n\t}\n\n\treturn (\n\t\t<div className={classes.ProfileStatus}>\n\t\t\t{editMode ? (\n\t\t\t\t<div>\n\t\t\t\t\t<input\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tonBlur={deactivateEditMode}\n\t\t\t\t\t\tonChange={onStatusChange}\n\t\t\t\t\t\tvalue={status}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t<p onDoubleClick={activateEditMode}>{props.status || 'No status'}</p>\n\t\t\t\t\t{/* <p onDoubleClick={activateEditMode}>{props.aboutMe}</p> */}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default ProfileStatusWithHooks\n","import React from 'react'\nimport Preloader from '../../common/Preloader/Preloader'\nimport classes from './ProfileInfo.module.css'\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks'\n\nconst ProfileInfo = props => {\n\tif (!props.profile) {\n\t\treturn <Preloader />\n\t}\n\n\treturn (\n\t\t<div className={classes.Profile}>\n\t\t\t<img src={props.profile.photos.large} alt='IMG' />\n\t\t\t<div className={classes.ProfileInfo}>\n\t\t\t\t<ProfileStatusWithHooks\n\t\t\t\t\taboutMe={props.profile.aboutMe}\n\t\t\t\t\tstatus={props.status}\n\t\t\t\t\tupdateStatus={props.updateStatus}\n\t\t\t\t/>\n\t\t\t\t<h5>Contacts: </h5>\n\t\t\t\t<p>{'facebook: ' + props.profile.contacts.facebook}</p>\n\t\t\t\t<p>{'vk: ' + props.profile.contacts.vk}</p>\n\t\t\t\t<p>{'twitter: ' + props.profile.contacts.twitter}</p>\n\t\t\t\t<p>{'instagram: ' + props.profile.contacts.instagram}</p>\n\t\t\t\t<p>{'youtube: ' + props.profile.contacts.youtube}</p>\n\t\t\t\t<p>{'github: ' + props.profile.contacts.github}</p>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default ProfileInfo\n","import React from 'react'\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\nimport classes from './Profile.module.css'\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\n\nconst Profile = props => {\n\treturn (\n\t\t<div className={classes.Profile}>\n\t\t\t<ProfileInfo\n\t\t\t\tprofile={props.profile}\n\t\t\t\tstatus={props.status}\n\t\t\t\tupdateStatus={props.updateStatus}\n\t\t\t/>\n\t\t\t<MyPostsContainer />\n\t\t</div>\n\t)\n}\n\nexport default Profile\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Navigate, useParams } from 'react-router-dom'\nimport { compose } from 'redux'\nimport {\n\tgetStatus,\n\tsetUserProfile,\n\tupdateStatus\n} from '../../redux/profile-reducer'\nimport Profile from './Profile'\n\nconst ProfileContainer = ({\n\tsetUserProfile,\n\tgetStatus,\n\tprofile,\n\tstatus,\n\tupdateStatus,\n\tauthorizedUserId,\n\tisAuth\n}) => {\n\tlet { userId } = useParams()\n\tuserId = userId || authorizedUserId\n\n\tuseEffect(() => {\n\t\tif (userId) {\n\t\t\tsetUserProfile(userId)\n\t\t\tgetStatus(userId)\n\t\t}\n\t}, [userId, setUserProfile, getStatus])\n\n\tif (!isAuth && !userId) {\n\t\treturn <Navigate to='/login' />\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Profile profile={profile} status={status} updateStatus={updateStatus} />\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = state => ({\n\tprofile: state.profilePage.profile,\n\tstatus: state.profilePage.status,\n\tauthorizedUserId: state.auth.userId,\n\tisAuth: state.auth.isAuth\n})\n\nexport default compose(\n\tconnect(mapStateToProps, { setUserProfile, getStatus, updateStatus })\n)(ProfileContainer)\n","// extracted by mini-css-extract-plugin\nexport default {\"Textarea\":\"createFormsControls_Textarea__IlAFW\",\"error\":\"createFormsControls_error__CVMTv\"};","import { Field } from 'redux-form'\nimport classes from './createFormsControls.module.css'\n\nconst Element =\n\tElement =>\n\t({ input, meta: {touched, error}, ...props }) => {\n\t\tconst hasError = touched && error\n\n\t\treturn (\n\t\t\t<div className={classes.Textarea + ' ' + (hasError && classes.error)}>\n\t\t\t\t<Element {...input} {...props} />\n\t\t\t\t{hasError && <span>{error}</span>}\n\t\t\t</div>\n\t\t)\n\t}\n\nexport const Textarea = Element('textarea')\n\nexport const Input = Element('input')\n\nexport const createField = (\n\tplaceholder,\n\tname,\n\tvalidators,\n\tcomponent,\n\tprops = {},\n\ttext = null\n) => (\n\t<div>\n\t\t<Field\n\t\t\tvalidate={validators}\n\t\t\tplaceholder={placeholder}\n\t\t\tname={name}\n\t\t\tcomponent={component}\n\t\t\t{...props}\n\t\t/>\n\t\t{text}\n\t</div>\n)\n","export const required = value => {\n\tif (value) return undefined\n\n\treturn 'Field is required'\n}\n\nexport const maxLengthCreator = maxLength => value => {\n\tif (value && value.length > maxLength)\n\t\treturn `Max length is ${maxLength} symbols`\n\n\treturn undefined\n}\n\nexport const maxLength10 = maxLengthCreator(10)\nexport const maxLength100 = maxLengthCreator(100)\n"],"names":["props","_jsxs","className","classes","children","_jsx","message","src","alt","likesCount","onClick","deletePost","id","MyPosts","postId","getPosts","posts","map","p","Post","_Fragment","AddNewPostFormRedux","onSubmit","values","newPostText","addPost","reduxForm","form","handleSubmit","Field","placeholder","component","Textarea","name","validate","required","maxLength10","React","connect","state","profilePage","dispatch","addPostAC","deletePostAC","editMode","setEditMode","useState","status","setStatus","useEffect","autoFocus","onBlur","deactivateEditMode","updateStatus","onChange","e","currentTarget","value","onDoubleClick","activateEditMode","profile","photos","large","ProfileStatusWithHooks","aboutMe","contacts","facebook","vk","twitter","instagram","youtube","github","Preloader","Profile","ProfileInfo","MyPostsContainer","compose","authorizedUserId","auth","userId","isAuth","setUserProfile","getStatus","_ref","useParams","Navigate","to","Element","input","meta","touched","error","hasError","Input","createField","validators","arguments","length","undefined","text","maxLengthCreator","maxLength","concat","maxLength100"],"sourceRoot":""}