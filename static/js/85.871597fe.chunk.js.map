{"version":3,"file":"static/js/85.871597fe.chunk.js","mappings":"4OACA,QAA0B,yBAA1B,EAA6D,yBCA7D,EAAuB,mB,aCEvB,MAgBA,EAhBaA,IAEXC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAaC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,KAAAD,SAAIJ,EAAMM,WACVD,EAAAA,EAAAA,KAAA,OACCE,IAAI,+FACJC,IAAI,SAELP,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAG,QAAMJ,EAAMS,eACfJ,EAAAA,EAAAA,KAAA,UAAQK,QAASA,IAAMV,EAAMW,WAAWX,EAAMY,IAAIR,SAAC,wBCLhDS,EAAUb,IACf,MAAMW,EAAaG,IAClBd,EAAMW,WAAWG,EAAO,EAGzB,IAAIC,EAAWf,EAAMgB,MAAMC,KAAIC,IAC9Bb,EAAAA,EAAAA,KAACc,EAAI,CACJR,WAAYA,EAEZC,GAAIM,EAAEN,GACNN,QAASY,EAAEZ,QACXG,WAAYS,EAAET,YAHTS,EAAEN,MAaT,OACCX,EAAAA,EAAAA,MAAAmB,EAAAA,SAAA,CAAAhB,SAAA,EACCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAC9BJ,EAAMqB,UAAWhB,EAAAA,EAAAA,KAACiB,EAAmB,CAACC,SATxBC,IACbA,EAAOC,aACVzB,EAAM0B,QAAQF,EAAOC,YACtB,OAQCpB,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAAEW,MAChC,EAkBCO,GAAsBK,EAAAA,EAAAA,GAAU,CAAEC,KAAM,yBAAlBD,EAdL3B,IAErBC,EAAAA,EAAAA,MAAA,QAAMsB,SAAUvB,EAAM6B,aAAazB,SAAA,EAClCC,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CACLC,YAAY,eACZC,UAAWC,EAAAA,GACXC,KAAK,cACLC,SAAU,CAACC,EAAAA,GAAUC,EAAAA,OAEtBhC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kBASX,EAAekC,EAAAA,KAAWzB,GClC1B,MAEA,GAFyB0B,EAAAA,EAAAA,KAlBHC,IACd,CACNxB,MAAOwB,EAAMC,YAAYzB,MACzBS,YAAae,EAAMC,YAAYhB,gBAIRiB,IACjB,CACNhB,QAASD,IACRiB,GAASC,EAAAA,EAAAA,IAAUlB,GAAa,EAEjCd,WAAYG,IACX4B,GAASE,EAAAA,EAAAA,IAAa9B,GAAQ,KAKRyB,CAA6C1B,GCrBtE,GAAiB,E,wBCQjB,MA4CA,GAJiCc,EAAAA,EAAAA,GAAU,CAAEC,KAAM,gBAAlBD,EAxCTkB,IAAuC,IAAtC,aAAEhB,EAAY,QAAEiB,EAAO,MAAEC,GAAOF,EACxD,OACC5C,EAAAA,EAAAA,MAAA,QAAMsB,SAAUM,EAAazB,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,SACP2C,IAAS1C,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAAA,EAAQ6C,iBAAiB5C,SAAE2C,KACrD9C,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iBACF6C,EAAAA,EAAAA,IAAY,YAAa,WAAY,GAAIC,EAAAA,QAE3CjD,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,yBACF6C,EAAAA,EAAAA,IAAY,GAAI,iBAAkB,GAAIC,EAAAA,GAAO,CAAEC,KAAM,iBAEvDlD,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8BACF6C,EAAAA,EAAAA,IACA,yBACA,4BACA,GACAhB,EAAAA,QAGFhC,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gBACF6C,EAAAA,EAAAA,IAAY,WAAY,UAAW,GAAIhB,EAAAA,QAEzChC,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eAAe,IACjBgD,OAAOC,KAAKP,EAAQQ,UAAUrC,KAAIsC,IAClClD,EAAAA,EAAAA,KAAA,OAAAD,UACCH,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CACEmD,EAAI,MAAGN,EAAAA,EAAAA,IAAYM,EAAK,YAAcA,EAAK,GAAIL,EAAAA,gBAK9C,IC5CT,EAA0B,6BAA1B,EAAqE,iCAArE,EAA+G,4BCA/G,EAAgC,qCC4ChC,EA1C+BlD,IAC9B,MAAOwD,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,IAClCC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS1D,EAAM2D,SAE3CE,EAAAA,EAAAA,YAAU,KACTD,EAAU5D,EAAM2D,OAAO,GACrB,CAAC3D,EAAM2D,SAeV,OACCtD,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAsBC,SACpCoD,GACAnD,EAAAA,EAAAA,KAAA,OAAAD,UACCC,EAAAA,EAAAA,KAAA,SACCyD,WAAS,EACTC,OAfsBC,KAC1BP,GAAY,GACZzD,EAAMiE,aAAaN,EAAO,EActBO,SAXkBC,IACtBP,EAAUO,EAAEC,cAAcC,MAAM,EAW5BA,MAAOV,OAITtD,EAAAA,EAAAA,KAAA,OAAAD,UACCC,EAAAA,EAAAA,KAAA,KAAGiE,cA1BkBC,KACxBd,GAAY,EAAK,EAyBqBrD,SAAEJ,EAAM2D,QAAU,iBAIlD,EC6BFa,EAAU3B,IAAqC,IAApC,aAAE4B,EAAY,aAAEC,GAAc7B,EAC9C,OACC5C,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACCC,EAAAA,EAAAA,KAAA,KAAAD,SAAIqE,IAAiB,KAAGC,IACnB,EAIFC,EAAcC,IAAyC,IAAxC,QAAE9B,EAAO,QAAEzB,EAAO,aAAEwD,GAAcD,EACtD,OACC3E,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CACEiB,IAAWhB,EAAAA,EAAAA,KAAA,UAAQK,QAASmE,EAAazE,SAAC,UAC3CH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gBACF0C,EAAQgC,aAEV7E,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wBACF0C,EAAQiC,eAAiB,MAAQ,QAElCjC,EAAQiC,iBACR9E,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,6BACF0C,EAAQkC,8BAGX/E,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eAAc,IAAE0C,EAAQmC,YAE5BhF,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eAAe,IACjBgD,OAAOC,KAAKP,EAAQQ,UAAUrC,KAAIsC,IAClClD,EAAAA,EAAAA,KAACmE,EAAO,CAEPC,aAAclB,EACdmB,aAAc5B,EAAQQ,SAASC,IAF1BA,UAMH,EAIR,EA1GoBvD,IACnB,IAAKwD,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,GAEvC,IAAK1D,EAAM8C,QACV,OAAOzC,EAAAA,EAAAA,KAAC6E,EAAAA,EAAS,IAGlB,MAMM,OAAEC,EAAS,CAAC,GAAMnF,EAAM8C,QAQ9B,OACC7C,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAgBC,SAAA,EAC/BH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKE,IAAK4E,EAAOC,OAASC,EAAW7E,IAAI,QACxCR,EAAMqB,SACNhB,EAAAA,EAAAA,KAAA,SAAO8C,KAAK,OAAOe,SAnBKC,IACvBA,EAAEmB,OAAOC,MAAMC,QAClBxF,EAAMyF,UAAUtB,EAAEmB,OAAOC,MAAM,GAChC,IAiBM,SAELtF,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAoBC,SAAA,EACnCC,EAAAA,EAAAA,KAACqF,EAAsB,CACtBT,QAASjF,EAAM8C,QAAQmC,QACvBtB,OAAQ3D,EAAM2D,OACdM,aAAcjE,EAAMiE,eAEpBT,GACAnD,EAAAA,EAAAA,KAACsF,EAAe,CACfC,cAAe5F,EAAM8C,QACrBA,QAAS9C,EAAM8C,QACfvB,SAxBYsE,IAChB7F,EAAM8F,YAAYD,GAAUE,MAAK,KAChCtC,GAAY,EAAM,GACjB,KAwBCpD,EAAAA,EAAAA,KAACsE,EAAW,CACX7B,QAAS9C,EAAM8C,QACfzB,QAASrB,EAAMqB,QACfwD,aAAcA,KACbpB,GAAY,EAAK,SAahB,EC7CR,EAhBgBzD,IAEdC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAQ6F,QAAQ5F,SAAA,EAC/BC,EAAAA,EAAAA,KAAC4F,EAAW,CACXnD,QAAS9C,EAAM8C,QACfa,OAAQ3D,EAAM2D,OACdM,aAAcjE,EAAMiE,aACpB5C,QAASrB,EAAMqB,QACfoE,UAAWzF,EAAMyF,UACjBK,YAAa9F,EAAM8F,eAEpBzF,EAAAA,EAAAA,KAAC6F,EAAgB,CAAC7E,QAASrB,EAAMqB,aC6DpC,GAAe8E,EAAAA,EAAAA,KACd5D,EAAAA,EAAAA,KARuBC,IAAK,CAC5BM,QAASN,EAAMC,YAAYK,QAC3Ba,OAAQnB,EAAMC,YAAYkB,OAC1ByC,iBAAkB5D,EAAM6D,KAAKC,OAC7BC,OAAQ/D,EAAM6D,KAAKE,UAIM,CACxBC,eAAc,IACdC,UAAS,KACTxC,aAAY,KACZwB,UAAS,KACTK,YACD,OAPD,EA/DyBjD,IAUlB,IAVmB,eACzB2D,EAAc,UACdC,EAAS,QACT3D,EAAO,OACPa,EAAM,aACNM,EAAY,iBACZmC,EAAgB,OAChBG,EAAM,UACNd,EAAS,YACTK,GACAjD,EACA,MAAOxB,EAASqF,IAAchD,EAAAA,EAAAA,WAAS,IAChCiD,EAAWC,IAAgBlD,EAAAA,EAAAA,WAAS,GAE3C,IAAI,OAAC4C,IAAUO,EAAAA,EAAAA,KAoBf,OAlBAP,EAASA,GAAUF,GAEnBvC,EAAAA,EAAAA,YAAU,KAWLyC,GAVcQ,WACjB,IACCF,GAAa,SACPJ,EAAeF,SACfG,EAAUH,GAChBI,EAAWK,OAAOT,KAAYS,OAAOX,GACtC,CAAC,QACAQ,GAAa,EACd,GAGAI,EACD,GACE,CAACV,EAAQE,EAAgBC,EAAWL,IAElCG,GAAWD,GAKfjG,EAAAA,EAAAA,KAAAe,EAAAA,SAAA,CAAAhB,SACEuG,GACAtG,EAAAA,EAAAA,KAAC6E,EAAAA,EAAS,KAEV7E,EAAAA,EAAAA,KAAC2F,EAAO,CACP3E,QAASA,EACTyB,QAASA,EACTa,OAAQA,EACRM,aAAcA,EACdwB,UAAWA,EACXK,YAAaA,OAdTzF,EAAAA,EAAAA,KAAC4G,EAAAA,GAAQ,CAACC,GAAG,UAiBjB,G,mECjEL,QAA2B,sCAA3B,EAAyE,mC,aCEzE,MAAMC,EACLA,GACAtE,IAAoD,IAAnD,MAAEuE,EAAOC,MAAM,QAAEC,EAAO,MAAEvE,MAAY/C,GAAO6C,EAC7C,MAAM0E,EAAWD,GAAWvE,EAE5B,OACC9C,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmB,KAAOoH,GAAYpH,GAAeC,SAAA,EACpEC,EAAAA,EAAAA,KAAC8G,EAAO,IAAKC,KAAWpH,IACvBuH,IAAYlH,EAAAA,EAAAA,KAAA,QAAAD,SAAO2C,MACf,EAIId,EAAWkF,EAAQ,YAEnBjE,EAAQiE,EAAQ,SAEhBlE,EAAc,SAC1BlB,EACAG,EACAsF,EACAxF,GAAS,IACThC,EAAKyH,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACTE,EAAIF,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAAI,OAEXxH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACCC,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CACLK,SAAUqF,EACVzF,YAAaA,EACbG,KAAMA,EACNF,UAAWA,KACPhC,IAEJ2H,IACI,C,qDCrCA,MAAMvF,EAAWiC,IACvB,IAAIA,EAEJ,MAAO,mBAAmB,EAGduD,EAAmBC,GAAaxD,IAC5C,GAAIA,GAASA,EAAMmB,OAASqC,EAC3B,MAAM,iBAANC,OAAwBD,EAAS,WAElB,EAGJxF,EAAcuF,EAAiB,IAC/BG,EAAeH,EAAiB,I,kCCb7C,SAAgB,MAAQ,qBAAqB,iBAAmB,gC","sources":["webpack://learnReact/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://learnReact/./src/components/Profile/MyPosts/Posts/Post.module.css?5aca","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.jsx","webpack://learnReact/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://learnReact/./src/components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css?c3a9","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","webpack://learnReact/./src/components/hoc/FormsControls/createFormsControls.module.css?7b4f","components/hoc/FormsControls/createFormsControls.js","utils/validators/validators.js","webpack://learnReact/./src/components/Login/Login.module.css?3530"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MyPosts\":\"MyPosts_MyPosts__8CHeK\",\"addPost\":\"MyPosts_addPost__vrj7C\"};","// extracted by mini-css-extract-plugin\nexport default {\"Post\":\"Post_Post__SCj4T\"};","import React from 'react'\nimport classes from './Post.module.css'\n\nconst Post = props => {\n\treturn (\n\t\t<div className={classes.Post}>\n\t\t\t<p>{props.message}</p>\n\t\t\t<img\n\t\t\t\tsrc='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTnGWEwXpRS7z7rVaGrjIWWTdE8_TiYTGiYjA&s'\n\t\t\t\talt='IMG'\n\t\t\t/>\n\t\t\t<p>Like {props.likesCount}</p>\n\t\t\t<button onClick={() => props.deletePost(props.id)}>\n\t\t\t\tDelete this post\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default Post\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { maxLength10, required } from '../../../utils/validators/validators'\nimport { Textarea } from '../../hoc/FormsControls/createFormsControls'\nimport classes from './MyPosts.module.css'\nimport Post from './Posts/Post'\n\nconst MyPosts = props => {\n\tconst deletePost = postId => {\n\t\tprops.deletePost(postId)\n\t}\n\n\tlet getPosts = props.posts.map(p => (\n\t\t<Post\n\t\t\tdeletePost={deletePost}\n\t\t\tkey={p.id}\n\t\t\tid={p.id}\n\t\t\tmessage={p.message}\n\t\t\tlikesCount={p.likesCount}\n\t\t/>\n\t))\n\n\tconst onAddPost = values => {\n\t\tif (values.newPostText) {\n\t\t\tprops.addPost(values.newPostText)\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className={classes.addPost}>\n\t\t\t\t{props.isOwner && <AddNewPostFormRedux onSubmit={onAddPost} />}\n\t\t\t</div>\n\t\t\t<div className={classes.MyPosts}>{getPosts}</div>\n\t\t</>\n\t)\n}\n\nconst AddNewPostForm = props => {\n\treturn (\n\t\t<form onSubmit={props.handleSubmit}>\n\t\t\t<Field\n\t\t\t\tplaceholder='Post message'\n\t\t\t\tcomponent={Textarea}\n\t\t\t\tname='newPostText'\n\t\t\t\tvalidate={[required, maxLength10]}\n\t\t\t/>\n\t\t\t<button>Add Post</button>\n\t\t</form>\n\t)\n}\n\nconst AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(\n\tAddNewPostForm\n)\n\nexport default React.memo(MyPosts)\n","import { connect } from 'react-redux'\nimport { addPostAC, deletePostAC } from '../../../redux/profile-reducer'\nimport MyPosts from './MyPosts'\n\nlet mapStateToProps = state => {\n\treturn {\n\t\tposts: state.profilePage.posts,\n\t\tnewPostText: state.profilePage.newPostText\n\t}\n}\n\nlet mapDispatchToProps = dispatch => {\n\treturn {\n\t\taddPost: newPostText => {\n\t\t\tdispatch(addPostAC(newPostText))\n\t\t},\n\t\tdeletePost: postId => {\n\t\t\tdispatch(deletePostAC(postId))\n\t\t}\n\t}\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react'\nimport { reduxForm } from 'redux-form'\nimport {\n\tcreateField,\n\tInput,\n\tTextarea\n} from '../../../hoc/FormsControls/createFormsControls'\nimport classes from '../../../Login/Login.module.css' // #FIXME\n\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<button>Save</button>\n\t\t\t{error && <div className={classes.FormSummaryError}>{error}</div>}\n\t\t\t<div>\n\t\t\t\t<b>Full Name: </b>\n\t\t\t\t{createField('Full name', 'fullName', [], Input)}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<b>Looking for a job: </b>\n\t\t\t\t{createField('', 'lookingForAJob', [], Input, { type: 'checkbox' })}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<b>My professional skills :</b>\n\t\t\t\t{createField(\n\t\t\t\t\t'My professional skills',\n\t\t\t\t\t'lookingForAJobDescription',\n\t\t\t\t\t[],\n\t\t\t\t\tTextarea\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<b>About me :</b>\n\t\t\t\t{createField('About me', 'aboutMe', [], Textarea)}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<b>Contacts: </b>{' '}\n\t\t\t\t{Object.keys(profile.contacts).map(key => (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t{key}: {createField(key, 'contacts.' + key, [], Input)}\n\t\t\t\t\t\t</b>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(\n\tProfileDataForm\n)\n\nexport default ProfileDataFormReduxForm\n","// extracted by mini-css-extract-plugin\nexport default {\"Profile\":\"ProfileInfo_Profile__ySV0h\",\"ProfileInfo\":\"ProfileInfo_ProfileInfo__Z8dFK\",\"Avatar\":\"ProfileInfo_Avatar__Y-nEA\"};","// extracted by mini-css-extract-plugin\nexport default {\"ProfileStatus\":\"ProfileStatus_ProfileStatus__9f4bE\"};","import React, { useEffect, useState } from 'react'\nimport classes from './ProfileStatus.module.css'\n\nconst ProfileStatusWithHooks = props => {\n\tconst [editMode, setEditMode] = useState(false)\n\tconst [status, setStatus] = useState(props.status)\n\n\tuseEffect(() => {\n\t\tsetStatus(props.status)\n\t}, [props.status])\n\n\tconst activateEditMode = () => {\n\t\tsetEditMode(true)\n\t}\n\n\tconst deactivateEditMode = () => {\n\t\tsetEditMode(false)\n\t\tprops.updateStatus(status)\n\t}\n\n\tconst onStatusChange = e => {\n\t\tsetStatus(e.currentTarget.value)\n\t}\n\n\treturn (\n\t\t<div className={classes.ProfileStatus}>\n\t\t\t{editMode ? (\n\t\t\t\t<div>\n\t\t\t\t\t<input\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tonBlur={deactivateEditMode}\n\t\t\t\t\t\tonChange={onStatusChange}\n\t\t\t\t\t\tvalue={status}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t<p onDoubleClick={activateEditMode}>{props.status || 'No status'}</p>\n\t\t\t\t\t{/* <p onDoubleClick={activateEditMode}>{props.aboutMe}</p> */}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default ProfileStatusWithHooks\n","import React, { useState } from 'react'\nimport userPhoto from '../../../assets/user.png'\nimport Preloader from '../../common/Preloader/Preloader'\nimport ProfileDataForm from './ProfileDataForm/ProfileDataForm'\nimport classes from './ProfileInfo.module.css'\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks'\n\nconst ProfileInfo = props => {\n\tlet [editMode, setEditMode] = useState(false)\n\n\tif (!props.profile) {\n\t\treturn <Preloader />\n\t}\n\n\tconst onMainPhotoSelected = e => {\n\t\tif (e.target.files.length) {\n\t\t\tprops.savePhoto(e.target.files[0])\n\t\t}\n\t}\n\n\tconst { photos = {} } = props.profile\n\n\tconst onSubmit = formData => {\n\t\tprops.saveProfile(formData).then(() => {\n\t\t\tsetEditMode(false)\n\t\t})\n\t}\n\n\treturn (\n\t\t<div className={classes.Profile}>\n\t\t\t<div className={classes.Avatar}>\n\t\t\t\t<img src={photos.large || userPhoto} alt='IMG' />\n\t\t\t\t{props.isOwner ? (\n\t\t\t\t\t<input type='file' onChange={onMainPhotoSelected} />\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t\t<div className={classes.ProfileInfo}>\n\t\t\t\t<ProfileStatusWithHooks\n\t\t\t\t\taboutMe={props.profile.aboutMe}\n\t\t\t\t\tstatus={props.status}\n\t\t\t\t\tupdateStatus={props.updateStatus}\n\t\t\t\t/>\n\t\t\t\t{editMode ? (\n\t\t\t\t\t<ProfileDataForm\n\t\t\t\t\t\tinitialValues={props.profile}\n\t\t\t\t\t\tprofile={props.profile}\n\t\t\t\t\t\tonSubmit={onSubmit}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<ProfileData\n\t\t\t\t\t\tprofile={props.profile}\n\t\t\t\t\t\tisOwner={props.isOwner}\n\t\t\t\t\t\tgoToEditMode={() => {\n\t\t\t\t\t\t\tsetEditMode(true)\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\n\t\t\t\t{/* <h5>Contacts: </h5>\n\t\t\t\t<p>{'facebook: ' + props.profile.contacts.facebook}</p>\n\t\t\t\t<p>{'vk: ' + props.profile.contacts.vk}</p>\n\t\t\t\t<p>{'twitter: ' + props.profile.contacts.twitter}</p>\n\t\t\t\t<p>{'instagram: ' + props.profile.contacts.instagram}</p>\n\t\t\t\t<p>{'youtube: ' + props.profile.contacts.youtube}</p>\n\t\t\t\t<p>{'github: ' + props.profile.contacts.github}</p> */}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst Contact = ({ contactTitle, contactValue }) => {\n\treturn (\n\t\t<div>\n\t\t\t<b>{contactTitle}</b>: {contactValue}\n\t\t</div>\n\t)\n}\n\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\n\treturn (\n\t\t<div>\n\t\t\t{isOwner && <button onClick={goToEditMode}>Edit</button>}\n\t\t\t<div>\n\t\t\t\t<b>Full Name: </b>\n\t\t\t\t{profile.fullName}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<b>Looking for a job: </b>\n\t\t\t\t{profile.lookingForAJob ? 'yes' : 'no'}\n\t\t\t</div>\n\t\t\t{profile.lookingForAJob && (\n\t\t\t\t<div>\n\t\t\t\t\t<b>My professional skills :</b>\n\t\t\t\t\t{profile.lookingForAJobDescription}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div>\n\t\t\t\t<b>About me :</b> {profile.aboutMe}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<b>Contacts: </b>{' '}\n\t\t\t\t{Object.keys(profile.contacts).map(key => (\n\t\t\t\t\t<Contact\n\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\tcontactTitle={key}\n\t\t\t\t\t\tcontactValue={profile.contacts[key]}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default ProfileInfo\n","import React from 'react'\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\nimport classes from './Profile.module.css'\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\n\nconst Profile = props => {\n\treturn (\n\t\t<div className={classes.Profile}>\n\t\t\t<ProfileInfo\n\t\t\t\tprofile={props.profile}\n\t\t\t\tstatus={props.status}\n\t\t\t\tupdateStatus={props.updateStatus}\n\t\t\t\tisOwner={props.isOwner}\n\t\t\t\tsavePhoto={props.savePhoto}\n\t\t\t\tsaveProfile={props.saveProfile}\n\t\t\t/>\n\t\t\t<MyPostsContainer isOwner={props.isOwner} />\n\t\t</div>\n\t)\n}\n\nexport default Profile\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Navigate, useParams } from 'react-router-dom'\nimport { compose } from 'redux'\nimport {\n\tgetStatus,\n\tsavePhoto,\n\tsaveProfile,\n\tsetUserProfile,\n\tupdateStatus\n} from '../../redux/profile-reducer'\nimport Preloader from '../common/Preloader/Preloader'\nimport Profile from './Profile'\n\nconst ProfileContainer = ({\n\tsetUserProfile,\n\tgetStatus,\n\tprofile,\n\tstatus,\n\tupdateStatus,\n\tauthorizedUserId,\n\tisAuth,\n\tsavePhoto,\n\tsaveProfile\n}) => {\n\tconst [isOwner, setIsOwner] = useState(false)\n\tconst [isLoading, setIsLoading] = useState(true)\n\n\tlet {userId} = useParams()\n\n\tuserId = userId || authorizedUserId\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tsetIsLoading(true)\n\t\t\t\tawait setUserProfile(userId)\n\t\t\t\tawait getStatus(userId)\n\t\t\t\tsetIsOwner(String(userId) === String(authorizedUserId))\n\t\t\t} finally {\n\t\t\t\tsetIsLoading(false)\n\t\t\t}\n\t\t}\n\t\tif (userId) {\n\t\t\tfetchData()\n\t\t}\n\t}, [userId, setUserProfile, getStatus, authorizedUserId])\n\n\tif (!isAuth && !userId) {\n\t\treturn <Navigate to='/login' />\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{isLoading ? (\n\t\t\t\t<Preloader />\n\t\t\t) : (\n\t\t\t\t<Profile\n\t\t\t\t\tisOwner={isOwner}\n\t\t\t\t\tprofile={profile}\n\t\t\t\t\tstatus={status}\n\t\t\t\t\tupdateStatus={updateStatus}\n\t\t\t\t\tsavePhoto={savePhoto}\n\t\t\t\t\tsaveProfile={saveProfile}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nconst mapStateToProps = state => ({\n\tprofile: state.profilePage.profile,\n\tstatus: state.profilePage.status,\n\tauthorizedUserId: state.auth.userId,\n\tisAuth: state.auth.isAuth\n})\n\nexport default compose(\n\tconnect(mapStateToProps, {\n\t\tsetUserProfile,\n\t\tgetStatus,\n\t\tupdateStatus,\n\t\tsavePhoto,\n\t\tsaveProfile\n\t})\n)(ProfileContainer)\n","// extracted by mini-css-extract-plugin\nexport default {\"Textarea\":\"createFormsControls_Textarea__IlAFW\",\"error\":\"createFormsControls_error__CVMTv\"};","import { Field } from 'redux-form'\nimport classes from './createFormsControls.module.css'\n\nconst Element =\n\tElement =>\n\t({ input, meta: { touched, error }, ...props }) => {\n\t\tconst hasError = touched && error\n\n\t\treturn (\n\t\t\t<div className={classes.Textarea + ' ' + (hasError && classes.error)}>\n\t\t\t\t<Element {...input} {...props} />\n\t\t\t\t{hasError && <span>{error}</span>}\n\t\t\t</div>\n\t\t)\n\t}\n\nexport const Textarea = Element('textarea')\n\nexport const Input = Element('input')\n\nexport const createField = (\n\tplaceholder,\n\tname,\n\tvalidators,\n\tcomponent,\n\tprops = {},\n\ttext = null\n) => (\n\t<div>\n\t\t<Field\n\t\t\tvalidate={validators}\n\t\t\tplaceholder={placeholder}\n\t\t\tname={name}\n\t\t\tcomponent={component}\n\t\t\t{...props}\n\t\t/>\n\t\t{text}\n\t</div>\n)\n","export const required = value => {\n\tif (value) return undefined\n\n\treturn 'Field is required'\n}\n\nexport const maxLengthCreator = maxLength => value => {\n\tif (value && value.length > maxLength)\n\t\treturn `Max length is ${maxLength} symbols`\n\n\treturn undefined\n}\n\nexport const maxLength10 = maxLengthCreator(10)\nexport const maxLength100 = maxLengthCreator(100)\n","// extracted by mini-css-extract-plugin\nexport default {\"Login\":\"Login_Login__VdlKH\",\"FormSummaryError\":\"Login_FormSummaryError__JXw3A\"};"],"names":["props","_jsxs","className","classes","children","_jsx","message","src","alt","likesCount","onClick","deletePost","id","MyPosts","postId","getPosts","posts","map","p","Post","_Fragment","isOwner","AddNewPostFormRedux","onSubmit","values","newPostText","addPost","reduxForm","form","handleSubmit","Field","placeholder","component","Textarea","name","validate","required","maxLength10","React","connect","state","profilePage","dispatch","addPostAC","deletePostAC","_ref","profile","error","FormSummaryError","createField","Input","type","Object","keys","contacts","key","editMode","setEditMode","useState","status","setStatus","useEffect","autoFocus","onBlur","deactivateEditMode","updateStatus","onChange","e","currentTarget","value","onDoubleClick","activateEditMode","Contact","contactTitle","contactValue","ProfileData","_ref2","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Preloader","photos","large","userPhoto","target","files","length","savePhoto","ProfileStatusWithHooks","ProfileDataForm","initialValues","formData","saveProfile","then","Profile","ProfileInfo","MyPostsContainer","compose","authorizedUserId","auth","userId","isAuth","setUserProfile","getStatus","setIsOwner","isLoading","setIsLoading","useParams","async","String","fetchData","Navigate","to","Element","input","meta","touched","hasError","validators","arguments","undefined","text","maxLengthCreator","maxLength","concat","maxLength100"],"sourceRoot":""}