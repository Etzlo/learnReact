{"version":3,"file":"static/js/521.18103f88.chunk.js","mappings":"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","sources":["components/Dialogs/AddMessageForm/AddMessageForm.jsx","webpack://learnReact/./src/components/Dialogs/Dialog/Dialog.module.css?19be","components/Dialogs/Dialog/Dialog.jsx","webpack://learnReact/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://learnReact/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","webpack://learnReact/./src/components/hoc/FormsControls/createFormsControls.module.css?7b4f","components/hoc/FormsControls/createFormsControls.js","components/hoc/withAuthRedirect.js","utils/validators/validators.js"],"sourcesContent":["import { Field, reduxForm } from 'redux-form'\nimport { maxLength100, required } from '../../../utils/validators/validators'\nimport { Textarea } from '../../hoc/FormsControls/createFormsControls'\n\nconst AddMessageForm = props => {\n\treturn (\n\t\t<form onSubmit={props.handleSubmit}>\n\t\t\t<Field\n\t\t\t\tcomponent={Textarea}\n\t\t\t\tvalidate={[required, maxLength100]}\n\t\t\t\tname='newMessageBody'\n\t\t\t\tplaceholder='Enter your message'\n\t\t\t></Field>\n\t\t\t<button>Enter</button>\n\t\t</form>\n\t)\n}\n\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(\n\tAddMessageForm\n)\n\nexport default AddMessageFormRedux\n","// extracted by mini-css-extract-plugin\nexport default {\"Dialog\":\"Dialog_Dialog__9a9dP\"};","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport classes from './Dialog.module.css'\n\nconst Dialog = props => {\n\treturn (\n\t\t<div className={classes.Dialog}>\n\t\t\t<NavLink to={`${props.id}`}>{props.name + ' ' + props.id}</NavLink>\n\t\t</div>\n\t)\n}\n\nexport default Dialog\n","// extracted by mini-css-extract-plugin\nexport default {\"DialogsPage\":\"Dialogs_DialogsPage__Ov84Q\",\"Dialogs\":\"Dialogs_Dialogs__nrSsY\",\"Messages\":\"Dialogs_Messages__xK7+3\",\"addMessage\":\"Dialogs_addMessage__GG1Lt\"};","// extracted by mini-css-extract-plugin\nexport default {\"Message\":\"Message_Message__r3U20\"};","import React from 'react';\nimport classes from './Message.module.css'\n\nconst Message = props => {\n\n\treturn (\n\t\t<div className={classes.Message}>\n\t\t\t{props.message + ' ' + props.id}\n\t\t</div>\n\t)\n}\n\nexport default Message","import React from 'react'\nimport AddMessageFormRedux from './AddMessageForm/AddMessageForm'\nimport Dialog from './Dialog/Dialog'\nimport classes from './Dialogs.module.css'\nimport Message from './Message/Message'\n\nconst Dialogs = props => {\n\tconst getDialogs = props.dialogsPage.dialogs.map(d => (\n\t\t<Dialog key={d.id} name={d.name} id={d.id} />\n\t))\n\n\tconst getMessages = props.dialogsPage.messages.map(m => (\n\t\t<Message key={m.id} message={m.message} id={m.id} />\n\t))\n\n\tconst addNewMessage = values => {\n\t\tprops.addMessage(values.newMessageBody)\n\t}\n\n\treturn (\n\t\t<div className={classes.DialogsPage}>\n\t\t\t<div className={classes.Dialogs}>{getDialogs}</div>\n\t\t\t<div className={classes.Messages}>\n\t\t\t\t<div>{getMessages}</div>\n\t\t\t\t<div className={classes.addMessage}>\n\t\t\t\t\t<AddMessageFormRedux onSubmit={addNewMessage} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Dialogs\n","import { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { addMessageAC } from '../../redux/dialogs-reducer'\nimport { withAuthRedirect } from '../hoc/withAuthRedirect'\nimport Dialogs from './Dialogs'\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tdialogsPage: state.dialogsPage\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\taddMessage: newMessageBody => {\n\t\t\tdispatch(addMessageAC(newMessageBody))\n\t\t}\n\t}\n}\n\nexport default compose(\n\tconnect(mapStateToProps, mapDispatchToProps),\n\twithAuthRedirect\n)(Dialogs)\n","// extracted by mini-css-extract-plugin\nexport default {\"Textarea\":\"createFormsControls_Textarea__IlAFW\",\"error\":\"createFormsControls_error__CVMTv\"};","import { Field } from 'redux-form'\nimport classes from './createFormsControls.module.css'\n\nconst Element =\n\tElement =>\n\t({ input, meta: { touched, error }, ...props }) => {\n\t\tconst hasError = touched && error\n\n\t\treturn (\n\t\t\t<div className={classes.Textarea + ' ' + (hasError && classes.error)}>\n\t\t\t\t<Element {...input} {...props} />\n\t\t\t\t{hasError && <span>{error}</span>}\n\t\t\t</div>\n\t\t)\n\t}\n\nexport const Textarea = Element('textarea')\n\nexport const Input = Element('input')\n\nexport const createField = (\n\tplaceholder,\n\tname,\n\tvalidators,\n\tcomponent,\n\tprops = {},\n\ttext = null\n) => (\n\t<div>\n\t\t<Field\n\t\t\tvalidate={validators}\n\t\t\tplaceholder={placeholder}\n\t\t\tname={name}\n\t\t\tcomponent={component}\n\t\t\t{...props}\n\t\t/>\n\t\t{text}\n\t</div>\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Navigate } from 'react-router-dom'\n\nlet mapStateToPropsForRedirect = state => ({\n\tisAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = Component => {\n\tclass RedirectComponent extends React.Component {\n\t\trender() {\n\t\t\tif (!this.props.isAuth) return <Navigate to='/login' />\n\n\t\t\treturn <Component {...this.props} />\n\t\t}\n\t}\n\n\treturn connect(mapStateToPropsForRedirect)(RedirectComponent)\n}\n","export const required = value => {\n\tif (value) return undefined\n\n\treturn 'Field is required'\n}\n\nexport const maxLengthCreator = maxLength => value => {\n\tif (value && value.length > maxLength)\n\t\treturn `Max length is ${maxLength} symbols`\n\n\treturn undefined\n}\n\nexport const maxLength10 = maxLengthCreator(10)\nexport const maxLength100 = maxLengthCreator(100)\n"],"names":["reduxForm","form","props","_jsxs","onSubmit","handleSubmit","children","_jsx","Field","component","Textarea","validate","required","maxLength100","name","placeholder","className","classes","NavLink","to","concat","id","message","getDialogs","dialogsPage","dialogs","map","d","Dialog","getMessages","messages","m","Message","AddMessageFormRedux","values","addMessage","newMessageBody","compose","connect","state","dispatch","addMessageAC","withAuthRedirect","Dialogs","Element","_ref","input","meta","touched","error","hasError","Input","createField","validators","arguments","length","undefined","text","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","React","render","this","Navigate","value","maxLengthCreator","maxLength","maxLength10"],"sourceRoot":""}